{
  "name": "evocaition-vscext",
  "publisher": "tbogdala",
  "author": {
    "name": "Timothy Bogdala"
  },
  "displayName": "Evocaition",
  "description": "VS Code support for calling the command-line tool 'evocaition' to generate text with AI.",
  "version": "0.1.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/tbogdala/evocaition-vscext.git"
  },
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "evocaition.predictText",
        "title": "Evocaition: Predict Text"
      },
      {
        "command": "evocaition.predictSentence",
        "title": "Evocaition: Predict a Sentence"
      },
      {
        "command": "evocaition.setMaxTokens",
        "title": "Evocaition: Set Token Limit"
      },
      {
        "command": "evocaition.setModelId",
        "title": "Evocaition: Set Model Id"
      },
      {
        "command": "evocaition.setTemperature",
        "title": "Evocaition: Set Temperature"
      },
      {
        "command": "evocaition.setTopP",
        "title": "Evocaition: Set Top-P"
      },
      {
        "command": "evocaition.setMinP",
        "title": "Evocaition: Set Min-P"
      },
      {
        "command": "evocaition.setTopK",
        "title": "Evocaition: Set Top-K"
      },
      {
        "command": "evocaition.setRepPen",
        "title": "Evocaition: Set Repetition Penalty"
      },
      {
        "command": "evocaition.setApiKey",
        "title": "Evocaition: Set API Key"
      },
      {
        "command": "evocaition.setApiEndpoint",
        "title": "Evocaition: Set API Endpoint URL"
      }
    ],
    "keybindings": [
      {
        "command": "evocaition.predictText",
        "key": "ctrl+k p",
        "mac": "cmd+k p"
      },
      {
        "command": "evocaition.predictSentence",
        "key": "ctrl+k ctrl+p",
        "mac": "cmd+k cmd+p"
      }
    ],
    "configuration": {
      "title": "evocation",
      "properties": {
        "evocaition.promptTemplate": {
          "type": [
            "string",
            "null"
          ],
          "description": "The nunjucks template used to construct the prompt sent to the AI."
        },
        "evocaition.apiKey": {
          "type": [
            "string",
            "null"
          ],
          "description": "API Key for the endpoint being used"
        },
        "evocaition.apiEndpoint": {
          "type": [
            "string",
            "null"
          ],
          "description": "The API endpoint URL to use, such as 'https://openrouter.ai/api'"
        },
        "evocaition.modelId": {
          "type": "string",
          "default": "meta-llama/llama-3.2-1b-instruct",
          "description": "The API endpoint's model to use for prediction"
        },
        "evocaition.maxTokens": {
          "type": "integer",
          "default": 200,
          "minimum": 0,
          "description": "Number of tokens to predict (0 = until antiprompt is hit)"
        },
        "evocaition.sentenceMaxTokens": {
          "type": "integer",
          "default": 100,
          "minimum": 1,
          "description": "Number of tokens to predict for a sentence."
        },
        "evocaition.temperature": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "description": "Temperature for sampling"
        },
        "evocaition.topP": {
          "type": "number",
          "default": 0.8,
          "minimum": 0,
          "maximum": 1,
          "description": "Top-p (nucleus) sampling value"
        },
        "evocaition.minP": {
          "type": "number",
          "default": 0.05,
          "minimum": 0,
          "maximum": 1,
          "description": "Minimum probability threshold"
        },
        "evocaition.topK": {
          "type": "integer",
          "default": 40,
          "minimum": 0,
          "description": "Number of top tokens to include in sampling"
        },
        "evocaition.repPen": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "description": "Repetition penalty that makes it less likely to repeat tokens if set high"
        },
        "evocaition.seed": {
          "type": [
            "integer",
            "null"
          ],
          "default": null,
          "description": "If specified, the inferencing will sample deterministically, though that is not necessarily guaranteed by endpoints."
        },
        "evocaition.documentContextCharacterLength": {
          "type": [
            "integer"
          ],
          "default": 3000,
          "minimum": 0,
          "description": "The number of characters to pull before the cursor in the active document for context in the prompt sent to the AI."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/nunjucks": "^3.2.6",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.17.0",
    "@typescript-eslint/parser": "^8.17.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.16.0",
    "typescript": "^5.7.2"
  },
  "dependencies": {
    "nunjucks": "^3.2.4"
  }
}
